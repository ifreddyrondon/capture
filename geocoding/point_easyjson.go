// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package geocoding

import (
	json "encoding/json"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson3844eb60EncodeGithubComIfreddyrondonGocaptureGeocoding(out *jwriter.Writer, in Point) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"lat\":")
	if in.LAT == nil {
		out.RawString("null")
	} else {
		out.Float64(float64(*in.LAT))
	}
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"lng\":")
	if in.LNG == nil {
		out.RawString("null")
	} else {
		out.Float64(float64(*in.LNG))
	}
	out.RawByte('}')
}
